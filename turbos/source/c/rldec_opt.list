                      (    rldec_opt.asm):00001         *******************************************************************************
                      (    rldec_opt.asm):00002         * TurbOS
                      (    rldec_opt.asm):00003         *******************************************************************************
                      (    rldec_opt.asm):00004         * See LICENSE.txt for licensing information.
                      (    rldec_opt.asm):00005         ********************************************************************
                      (    rldec_opt.asm):00006         *
                      (    rldec_opt.asm):00007         * $Id$
                      (    rldec_opt.asm):00008         *
                      (    rldec_opt.asm):00009         * Edt/Rev  YYYY/MM/DD  Modified by
                      (    rldec_opt.asm):00010         * Comment
                      (    rldec_opt.asm):00011         * ------------------------------------------------------------------
                      (    rldec_opt.asm):00012         *   1      2024/05/31  BGP
                      (    rldec_opt.asm):00013         * Created.
                      (    rldec_opt.asm):00014         
                      (    rldec_opt.asm):00015                        nam       rldec
                      (    rldec_opt.asm):00016                        ttl       Run-length decoder in Turbo9 assembly
                      (    rldec_opt.asm):00017         
                      (    rldec_opt.asm):00018                        use       defs.d
     0000             (           defs.d):00001         _FF_UNIFIED_IO equ 0
     0000             (           defs.d):00002         _FF_BOOTING equ 0
                      (           defs.d):00003         
                      (           defs.d):00004          use ../../source/definitions/turbos.d
                      (../../source/defi):00001         *******************************************************************************
                      (../../source/defi):00002         * TurbOS
                      (../../source/defi):00003         *******************************************************************************
                      (../../source/defi):00004         * See LICENSE.txt for licensing information.
                      (../../source/defi):00005         *******************************************************************************
                      (../../source/defi):00006         *
                      (../../source/defi):00007         * Edt/Rev  YYYY/MM/DD  Modified by
                      (../../source/defi):00008         * Comment
                      (../../source/defi):00009         * ----------------------------------------------------------------------------
                      (../../source/defi):00010         *          2023/08/11  Boisy Pitre
                      (../../source/defi):00011         * Initial creation.
                      (../../source/defi):00012         *
                      (../../source/defi):00013         *******************************************************************************
                      (../../source/defi):00014         
     0000             (../../source/defi):00015         TURBOS.D       set       0
                      (../../source/defi):00016         
                      (../../source/defi):00017                        ifne      TURBOS.D-1
                      (../../source/defi):00018         
     0001             (../../source/defi):00019         TURBOS.D       set       1
                      (../../source/defi):00020         
                      (../../source/defi):00021                        nam       turbos.d
                      (../../source/defi):00022                        ttl       TurbOS system definitions
                      (../../source/defi):00023         
                      (../../source/defi):00024         * Common definitions
     0001             (../../source/defi):00025         true           equ       1
     0000             (../../source/defi):00026         false          equ       0
                      (../../source/defi):00027         
                      (../../source/defi):00028                        pag
                      (../../source/defi):00029         *****************************************
                      (../../source/defi):00030         * System service request code definitions
                      (../../source/defi):00031         *
                      (../../source/defi):00032                        org       0
                      (../../source/defi):00033         * User and system state calls
0000                  (../../source/defi):00034         F$Link         rmb       1                   link to module
0001                  (../../source/defi):00035         F$Load         rmb       1                   load module from file
0002                  (../../source/defi):00036         F$UnLink       rmb       1                   unlink module
0003                  (../../source/defi):00037         F$Fork         rmb       1                   start new process
0004                  (../../source/defi):00038         F$Wait         rmb       1                   wait for child process to die
0005                  (../../source/defi):00039         F$Chain        rmb       1                   chain process to new module
0006                  (../../source/defi):00040         F$Exit         rmb       1                   terminate process
0007                  (../../source/defi):00041         F$Mem          rmb       1                   set memory size
0008                  (../../source/defi):00042         F$Send         rmb       1                   send signal to process
0009                  (../../source/defi):00043         F$Icpt         rmb       1                   set signal intercept
000A                  (../../source/defi):00044         F$Sleep        rmb       1                   suspend process
000B                  (../../source/defi):00045         F$ID           rmb       1                   return process ID
000C                  (../../source/defi):00046         F$SPrior       rmb       1                   set process priority
000D                  (../../source/defi):00047         F$SSWI         rmb       1                   set software interrupt
000E                  (../../source/defi):00048         F$PrsNam       rmb       1                   parse pathlist name
000F                  (../../source/defi):00049         F$CmpNam       rmb       1                   compare two names
0010                  (../../source/defi):00050         F$SchBit       rmb       1                   search bit map
0011                  (../../source/defi):00051         F$AllBit       rmb       1                   allocate in bit map
0012                  (../../source/defi):00052         F$DelBit       rmb       1                   deallocate in bit map
0013                  (../../source/defi):00053         F$Time         rmb       1                   get current time
0014                  (../../source/defi):00054         F$STime        rmb       1                   set current time
0015                  (../../source/defi):00055         F$CRC          rmb       1                   generate CRC
                      (../../source/defi):00056         
                      (../../source/defi):00057                        org       $27                 beginning of system reserved calls
                      (../../source/defi):00058         * System state (privileged) calls
0027                  (../../source/defi):00059         F$VIRQ         rmb       1                   install/delete virtual IRQ
0028                  (../../source/defi):00060         F$SRqMem       rmb       1                   system memory request
0029                  (../../source/defi):00061         F$SRtMem       rmb       1                   system memory return
002A                  (../../source/defi):00062         F$IRQ          rmb       1                   enter IRQ polling table
002B                  (../../source/defi):00063         F$IOQu         rmb       1                   enter I/O queue
002C                  (../../source/defi):00064         F$AProc        rmb       1                   enter active process queue
002D                  (../../source/defi):00065         F$NProc        rmb       1                   start next process
002E                  (../../source/defi):00066         F$VModul       rmb       1                   validate module
002F                  (../../source/defi):00067         F$Find64       rmb       1                   find process/path descriptor
0030                  (../../source/defi):00068         F$All64        rmb       1                   allocate process/path descriptor
0031                  (../../source/defi):00069         F$Ret64        rmb       1                   return process/path descriptor
0032                  (../../source/defi):00070         F$SSvc         rmb       1                   service request table initialization
0033                  (../../source/defi):00071         F$IODel        rmb       1                   delete I/O module
                      (../../source/defi):00072         
                      (../../source/defi):00073         *
                      (../../source/defi):00074         * System calls $70 through $7F are reserved for user definitions
                      (../../source/defi):00075         *
                      (../../source/defi):00076                        org       $70
0070                  (../../source/defi):00077                        rmb       16                  reserved for user definition
                      (../../source/defi):00078         
                      (../../source/defi):00079                        pag
                      (../../source/defi):00080         **************************************
                      (../../source/defi):00081         * I/O service request code definitions
                      (../../source/defi):00082         *
                      (../../source/defi):00083                        org       $80
0080                  (../../source/defi):00084         I$Attach       rmb       1                   attach I/O device
0081                  (../../source/defi):00085         I$Detach       rmb       1                   detach I/O device
0082                  (../../source/defi):00086         I$Dup          rmb       1                   duplicate path
0083                  (../../source/defi):00087         I$Create       rmb       1                   create new file
0084                  (../../source/defi):00088         I$Open         rmb       1                   open existing file
0085                  (../../source/defi):00089         I$MakDir       rmb       1                   make directory file
0086                  (../../source/defi):00090         I$ChgDir       rmb       1                   change default directory
0087                  (../../source/defi):00091         I$Delete       rmb       1                   delete file
0088                  (../../source/defi):00092         I$Seek         rmb       1                   change current position
0089                  (../../source/defi):00093         I$Read         rmb       1                   read data
008A                  (../../source/defi):00094         I$Write        rmb       1                   write data
008B                  (../../source/defi):00095         I$ReadLn       rmb       1                   read line of ASCII data
008C                  (../../source/defi):00096         I$WritLn       rmb       1                   write line of ASCII data
008D                  (../../source/defi):00097         I$GetStt       rmb       1                   get path status
008E                  (../../source/defi):00098         I$SetStt       rmb       1                   set path status
008F                  (../../source/defi):00099         I$Close        rmb       1                   close path
0090                  (../../source/defi):00100         I$DeletX       rmb       1                   delete from current exec dir
                      (../../source/defi):00101         
                      (../../source/defi):00102         *******************
                      (../../source/defi):00103         * File access modes
                      (../../source/defi):00104         *
     0001             (../../source/defi):00105         READ.          equ       %00000001
     0002             (../../source/defi):00106         WRITE.         equ       %00000010
     0003             (../../source/defi):00107         UPDAT.         equ       READ.+WRITE.
     0004             (../../source/defi):00108         EXEC.          equ       %00000100
     0008             (../../source/defi):00109         PREAD.         equ       %00001000
     0010             (../../source/defi):00110         PWRIT.         equ       %00010000
     0020             (../../source/defi):00111         PEXEC.         equ       %00100000
     0040             (../../source/defi):00112         SHARE.         equ       %01000000
     0080             (../../source/defi):00113         DIR.           equ       %10000000
     0020             (../../source/defi):00114         ISIZ.          equ       %00100000
                      (../../source/defi):00115         
                      (../../source/defi):00116         **************
                      (../../source/defi):00117         * Signal codes
                      (../../source/defi):00118         *
                      (../../source/defi):00119                        org       0
0000                  (../../source/defi):00120         S$Kill         rmb       1                   non-interceptable abort
0001                  (../../source/defi):00121         S$Wake         rmb       1                   wake-up sleeping process
0002                  (../../source/defi):00122         S$Abort        rmb       1                   keyboard abort
0003                  (../../source/defi):00123         S$Intrpt       rmb       1                   keyboard interrupt
                      (../../source/defi):00124         
                      (../../source/defi):00125                        pag
                      (../../source/defi):00126         **********************************
                      (../../source/defi):00127         * Status codes for GetStat/SetStat
                      (../../source/defi):00128         *
                      (../../source/defi):00129                        org       0
0000                  (../../source/defi):00130         SS.Opt         rmb       1                   read/Write path descriptor options
0001                  (../../source/defi):00131         SS.Ready       rmb       1                   check for device ready
0002                  (../../source/defi):00132         SS.Size        rmb       1                   read/write file size
0003                  (../../source/defi):00133         SS.Reset       rmb       1                   device restore
0004                  (../../source/defi):00134                        rmb       1
0005                  (../../source/defi):00135         SS.Pos         rmb       1                   get file's current position
0006                  (../../source/defi):00136         SS.EOF         rmb       1                   test for end of file
0007                  (../../source/defi):00137         SS.Link        rmb       1                   link to status routines
0008                  (../../source/defi):00138         SS.ULink       rmb       1                   unlink status routines
0009                  (../../source/defi):00139                        rmb       1
000A                  (../../source/defi):00140         SS.Frz         rmb       1                   freeze DD. information
000B                  (../../source/defi):00141         SS.SPT         rmb       1                   set DD.TKS to given value
000C                  (../../source/defi):00142                        rmb       1
000D                  (../../source/defi):00143         SS.DCmd        rmb       1                   send direct command to disk
000E                  (../../source/defi):00144         SS.DevNm       rmb       1                   return device name (32-bytes at [X])
000F                  (../../source/defi):00145         SS.FD          rmb       1                   return file descriptor (Y-bytes at [X])
0010                  (../../source/defi):00146         SS.Ticks       rmb       1                   set lockout honor duration
0011                  (../../source/defi):00147         SS.Lock        rmb       1                   lock/release record
0012                  (../../source/defi):00148                        rmb       1
0013                  (../../source/defi):00149                        rmb       1
0014                  (../../source/defi):00150         SS.BlkRd       rmb       1                   block read
0015                  (../../source/defi):00151         SS.BlkWr       rmb       1                   block write
0016                  (../../source/defi):00152         SS.Reten       rmb       1                   retension cycle
0017                  (../../source/defi):00153         SS.WFM         rmb       1                   write file mark
0018                  (../../source/defi):00154         SS.RFM         rmb       1                   read past file mark
0019                  (../../source/defi):00155         SS.ELog        rmb       1                   read error log
001A                  (../../source/defi):00156         SS.SSig        rmb       1                   send signal on data ready
001B                  (../../source/defi):00157         SS.Relea       rmb       1                   release device
001C                  (../../source/defi):00158                        rmb       1
001D                  (../../source/defi):00159                        rmb       1
001E                  (../../source/defi):00160         SS.RsBit       rmb       1                   reserve bitmap sector (do not allocate in) LSB(X)=sct#
001F                  (../../source/defi):00161                        rmb       1                   reserved
0020                  (../../source/defi):00162                        rmb       1
0021                  (../../source/defi):00163                        rmb       3
0024                  (../../source/defi):00164                        rmb       1
0025                  (../../source/defi):00165                        rmb       1
0026                  (../../source/defi):00166                        rmb       1
0027                  (../../source/defi):00167                        rmb       1
0028                  (../../source/defi):00168         SS.ComSt       rmb       1                   Getstat/SetStat for baud/parity
0029                  (../../source/defi):00169         SS.Open        rmb       1                   SetStat to tell driver a path was opened
002A                  (../../source/defi):00170         SS.Close       rmb       1                   SetStat to tell driver a path was closed
002B                  (../../source/defi):00171         SS.HngUp       rmb       1                   SetStat to tell driver to hangup phone
002C                  (../../source/defi):00172         SS.FSig        rmb       1                   new signal for temp locked files
002D                  (../../source/defi):00173                        rmb       19
                      (../../source/defi):00174         
                      (../../source/defi):00175                        ttl       Direct Page Definitions
                      (../../source/defi):00176                        pag
                      (../../source/defi):00177         
                      (../../source/defi):00178         **********************************
                      (../../source/defi):00179         * Direct page variable definitions
                      (../../source/defi):00180         *
                      (../../source/defi):00181                        org       $00
                      (../../source/defi):00182                        org       $20
0020                  (../../source/defi):00183         D.FMBM         rmb       4                   free memory bit map pointers
0024                  (../../source/defi):00184         D.MLIM         rmb       2                   upper RAM memory limit
0026                  (../../source/defi):00185         D.ModDir       rmb       4                   module directory pointers (start and end)
002A                  (../../source/defi):00186         D.Init         rmb       2                   configuration module base address
002C                  (../../source/defi):00187         D.SWI3         rmb       2                   SWI3 vector
002E                  (../../source/defi):00188         D.SWI2         rmb       2                   SWI2 vector
0030                  (../../source/defi):00189         D.FIRQ         rmb       2                   FIRQ vector
0032                  (../../source/defi):00190         D.IRQ          rmb       2                   IRQ vector
0034                  (../../source/defi):00191         D.SWI          rmb       2                   SWI vector
0036                  (../../source/defi):00192         D.NMI          rmb       2                   NMI vector
0038                  (../../source/defi):00193         D.SvcIRQ       rmb       2                   interrupt service entry
003A                  (../../source/defi):00194         D.Poll         rmb       2                   interrupt polling routine
003C                  (../../source/defi):00195         D.UsrIRQ       rmb       2                   user interrupt routine
003E                  (../../source/defi):00196         D.SysIRQ       rmb       2                   system interrupt routine
0040                  (../../source/defi):00197         D.UsrSvc       rmb       2                   user service request routine
0042                  (../../source/defi):00198         D.SysSvc       rmb       2                   system service request routine
0044                  (../../source/defi):00199         D.UsrDis       rmb       2                   user service request dispatch table
0046                  (../../source/defi):00200         D.SysDis       rmb       2                   system service reuest dispatch table
0048                  (../../source/defi):00201         D.Slice        rmb       1                   process time slice count
0049                  (../../source/defi):00202         D.PrcDBT       rmb       2                   process descriptor block table
004B                  (../../source/defi):00203         D.Proc         rmb       2                   process descriptor address
004D                  (../../source/defi):00204         D.AProcQ       rmb       2                   active process queue
004F                  (../../source/defi):00205         D.WProcQ       rmb       2                   waiting process queue
0051                  (../../source/defi):00206         D.SProcQ       rmb       2                   sleeping process queue
     0053             (../../source/defi):00207         D.Time         equ       .                   time
0053                  (../../source/defi):00208         D.Year         rmb       1                   current year
0054                  (../../source/defi):00209         D.Month        rmb       1                   current month
0055                  (../../source/defi):00210         D.Day          rmb       1                   current da
0056                  (../../source/defi):00211         D.Hour         rmb       1                   current hour
0057                  (../../source/defi):00212         D.Min          rmb       1                   current minute
0058                  (../../source/defi):00213         D.Sec          rmb       1                   current second
0059                  (../../source/defi):00214         D.Ticks        rmb       4                   number of ticks since boot
005D                  (../../source/defi):00215         D.Tick         rmb       1                   current tick
005E                  (../../source/defi):00216         D.TSec         rmb       1                   ticks per second
005F                  (../../source/defi):00217         D.TSlice       rmb       1                   ticks per time-slice
0060                  (../../source/defi):00218         D.IOML         rmb       2                   I/O manager free memory low bound
0062                  (../../source/defi):00219         D.IOMH         rmb       2                   I/O manager free memory hi  bound
0064                  (../../source/defi):00220         D.DevTbl       rmb       2                   device driver table address
0066                  (../../source/defi):00221         D.PolTbl       rmb       2                   interrupt polling table address
0068                  (../../source/defi):00222         D.PthDBT       rmb       2                   path descriptor block table addrress
006A                  (../../source/defi):00223         D.BTLO         rmb       2                   bootstrap low address
006C                  (../../source/defi):00224         D.BTHI         rmb       2                   bootstrap hi address
006E                  (../../source/defi):00225         D.Clock        rmb       2                   address of clock tick routine
0070                  (../../source/defi):00226         D.Boot         rmb       1                   bootstrap attempted flag
0071                  (../../source/defi):00227         D.URtoSs       rmb       2                   address of user to system routine (VIRQ)
0073                  (../../source/defi):00228         D.VIRQTable    rmb       2                   pointer to virtual IRQ table
0075                  (../../source/defi):00229         D.CRC          rmb       1                   CRC checking mode flag
                      (../../source/defi):00230         
                      (../../source/defi):00231                        org       $100
0100                  (../../source/defi):00232         D.XSWI3        rmb       3
0103                  (../../source/defi):00233         D.XSWI2        rmb       3
0106                  (../../source/defi):00234         D.XSWI         rmb       3
0109                  (../../source/defi):00235         D.XNMI         rmb       3
010C                  (../../source/defi):00236         D.XIRQ         rmb       3
010F                  (../../source/defi):00237         D.XFIRQ        rmb       3
                      (../../source/defi):00238         
                      (../../source/defi):00239         * Table Sizes
     0020             (../../source/defi):00240         BMAPSZ         equ       65536/256/8         memory allocation bitmap table size
     0002             (../../source/defi):00241         SVCTNM         equ       2                   number of service request tables
     006E             (../../source/defi):00242         SVCTSZ         equ       (256-BMAPSZ)/SVCTNM-2 service request table size
                      (../../source/defi):00243         
                      (../../source/defi):00244                        ttl       Structure Formats
                      (../../source/defi):00245                        pag
                      (../../source/defi):00246         ************************************
                      (../../source/defi):00247         * Module directory entry definitions
                      (../../source/defi):00248         *
                      (../../source/defi):00249                        org       0
0000                  (../../source/defi):00250         MD$MPtr        rmb       2                   module pointer
0002                  (../../source/defi):00251         MD$Link        rmb       1                   module link count
0003                  (../../source/defi):00252                        rmb       1
     0004             (../../source/defi):00253         MD$ESize       equ       .                   module directory entry size
                      (../../source/defi):00254         
                      (../../source/defi):00255         ************************************
                      (../../source/defi):00256         * Module definitions
                      (../../source/defi):00257         *
                      (../../source/defi):00258         * Universal module offsets
                      (../../source/defi):00259         *
                      (../../source/defi):00260                        org       0
0000                  (../../source/defi):00261         M$ID           rmb       2                   ID code
0002                  (../../source/defi):00262         M$Size         rmb       2                   module size
0004                  (../../source/defi):00263         M$Name         rmb       2                   module name
0006                  (../../source/defi):00264         M$Type         rmb       1                   type / language
0007                  (../../source/defi):00265         M$Revs         rmb       1                   attributes / revision level
0008                  (../../source/defi):00266         M$Parity       rmb       1                   header parity
     0009             (../../source/defi):00267         M$IDSize       equ       .                   Mmdule ID size
                      (../../source/defi):00268         
                      (../../source/defi):00269         *
                      (../../source/defi):00270         * Type-dependent module offsets
                      (../../source/defi):00271         *
                      (../../source/defi):00272         * System, file manager, device driver, program module
                      (../../source/defi):00273         *
0009                  (../../source/defi):00274         M$Exec         rmb       2                   execution entry offset
                      (../../source/defi):00275         *
                      (../../source/defi):00276         * Device driver, program module
                      (../../source/defi):00277         *
000B                  (../../source/defi):00278         M$Mem          rmb       2                   stack requirement
                      (../../source/defi):00279         *
                      (../../source/defi):00280         * Device driver, device descriptor module
                      (../../source/defi):00281         *
000D                  (../../source/defi):00282         M$Mode         rmb       1                   device driver mode capabilities
                      (../../source/defi):00283         *
                      (../../source/defi):00284         * Device descriptor module
                      (../../source/defi):00285         *
                      (../../source/defi):00286                        org       M$IDSize
0009                  (../../source/defi):00287         M$FMgr         rmb       2                   file manager name offset
000B                  (../../source/defi):00288         M$PDev         rmb       2                   device driver name offset
000D                  (../../source/defi):00289                        rmb       1                   M$Mode (defined above)
000E                  (../../source/defi):00290         M$Port         rmb       3                   port address
0011                  (../../source/defi):00291         M$Opt          rmb       1                   device default options
0012                  (../../source/defi):00292         M$DTyp         rmb       1                   device type
     0012             (../../source/defi):00293         IT.DTP         equ       M$DTyp              descriptor type offset
                      (../../source/defi):00294         
                      (../../source/defi):00295         *
                      (../../source/defi):00296         * Configuration module entry offsets
                      (../../source/defi):00297         *
                      (../../source/defi):00298                        org       M$IDSize
0009                  (../../source/defi):00299         CM$MaxMem      rmb       3                   maximum free memory
000C                  (../../source/defi):00300         CM$PollCnt     rmb       1                   entries in interrupt polling table
000D                  (../../source/defi):00301         CM$DevCnt      rmb       1                   entries in device table
000E                  (../../source/defi):00302         CM$TickMod     rmb       2                   tick generator module name
0010                  (../../source/defi):00303         CM$GoMod       rmb       2                   startup module name
                      (../../source/defi):00304                        ifne      _FF_UNIFIED_IO
0012                  (../../source/defi):00305         CM$StoreMod    rmb       2                   initial storage device name
0012                  (../../source/defi):00306         CM$ConsoleMod  rmb       2                   initial console device name
                      (../../source/defi):00307                        endc
                      (../../source/defi):00308                        ifne      _FF_BOOTING
0012                  (../../source/defi):00309         CM$BootMod     rmb       2                   boot module name
                      (../../source/defi):00310                        endc
0012                  (../../source/defi):00311         CM$OSLevel     rmb       1                   operating system level
0013                  (../../source/defi):00312         CM$OSVer       rmb       1                   operating system  version
0014                  (../../source/defi):00313         CM$OSMajor     rmb       1                   operating system  major
0015                  (../../source/defi):00314         CM$OSMinor     rmb       1                   operating system  minor
0016                  (../../source/defi):00315         CM$Feature1    rmb       1                   feature byte 1
0017                  (../../source/defi):00316         CM$Feature2    rmb       1                   feature byte 2
0018                  (../../source/defi):00317                        rmb       4                   reserved for future use
                      (../../source/defi):00318         
                      (../../source/defi):00319         * Feature1 byte definitions
     0001             (../../source/defi):00320         CRCOn          equ       %00000001           CRC checking on
     0000             (../../source/defi):00321         CRCOff         equ       %00000000           CRC checking off
                      (../../source/defi):00322         
                      (../../source/defi):00323                        pag
                      (../../source/defi):00324         **************************
                      (../../source/defi):00325         * Module field definitions
                      (../../source/defi):00326         *
                      (../../source/defi):00327         * ID field - first two bytes of a module
                      (../../source/defi):00328         *
     0087             (../../source/defi):00329         M$ID1          equ       $87                 module ID code byte one
     00CD             (../../source/defi):00330         M$ID2          equ       $CD                 module ID code byte two
     87CD             (../../source/defi):00331         M$ID12         equ       M$ID1*256+M$ID2
                      (../../source/defi):00332         
                      (../../source/defi):00333         *
                      (../../source/defi):00334         * Module type/language field masks
                      (../../source/defi):00335         *
     00F0             (../../source/defi):00336         TypeMask       equ       %11110000           type field
     000F             (../../source/defi):00337         LangMask       equ       %00001111           language field
                      (../../source/defi):00338         
                      (../../source/defi):00339         *
                      (../../source/defi):00340         * Module type values
                      (../../source/defi):00341         *
     00F0             (../../source/defi):00342         Devic          equ       $F0                 device descriptor module
     00E0             (../../source/defi):00343         Drivr          equ       $E0                 physical device driver
     00D0             (../../source/defi):00344         FlMgr          equ       $D0                 file manager
     00C0             (../../source/defi):00345         Systm          equ       $C0                 system module
     0040             (../../source/defi):00346         Data           equ       $40                 data module
     0020             (../../source/defi):00347         Sbrtn          equ       $20                 subroutine module
     0010             (../../source/defi):00348         Prgrm          equ       $10                 program module
                      (../../source/defi):00349         
                      (../../source/defi):00350         *
                      (../../source/defi):00351         * Module language values
                      (../../source/defi):00352         *
     0001             (../../source/defi):00353         Objct          equ       1                   object code module
                      (../../source/defi):00354         
                      (../../source/defi):00355         *
                      (../../source/defi):00356         * Module attributes / revision byte
                      (../../source/defi):00357         *
                      (../../source/defi):00358         * Field masks
                      (../../source/defi):00359         *
     00F0             (../../source/defi):00360         AttrMask       equ       %11110000           attributes field
     000F             (../../source/defi):00361         RevsMask       equ       %00001111           revision level field
                      (../../source/defi):00362         
                      (../../source/defi):00363         *
                      (../../source/defi):00364         * Attribute flags
                      (../../source/defi):00365         *
     0080             (../../source/defi):00366         ReEnt          equ       %10000000           re-entrant module
                      (../../source/defi):00367         
                      (../../source/defi):00368         ********************
                      (../../source/defi):00369         * Device type values
                      (../../source/defi):00370         *
                      (../../source/defi):00371         * These values define various classes of devices, which are
                      (../../source/defi):00372         * managed by a file manager module.  The device type is embedded
                      (../../source/defi):00373         * in a device descriptor.
                      (../../source/defi):00374         *
     0000             (../../source/defi):00375         DT.SCF         equ       0                   sequential character file manager
     0001             (../../source/defi):00376         DT.RBF         equ       1                   random block file manager
     0002             (../../source/defi):00377         DT.Pipe        equ       2                   pipe file manager
                      (../../source/defi):00378         
                      (../../source/defi):00379         *********************
                      (../../source/defi):00380         * CRC result constant
                      (../../source/defi):00381         *
     0080             (../../source/defi):00382         CRCCon1        equ       $80
     0FE3             (../../source/defi):00383         CRCCon23       equ       $0FE3
                      (../../source/defi):00384         
                      (../../source/defi):00385                        ttl       Process Information
                      (../../source/defi):00386                        pag
                      (../../source/defi):00387         ********************************
                      (../../source/defi):00388         * Process descriptor definitions
                      (../../source/defi):00389         *
     000C             (../../source/defi):00390         DefIOSiz       equ       12
     0010             (../../source/defi):00391         NumPaths       equ       16                  number of local paths
                      (../../source/defi):00392         
                      (../../source/defi):00393                        org       0
0000                  (../../source/defi):00394         P$ID           rmb       1                   process ID
0001                  (../../source/defi):00395         P$PID          rmb       1                   parent's ID
0002                  (../../source/defi):00396         P$SID          rmb       1                   sibling's ID
0003                  (../../source/defi):00397         P$CID          rmb       1                   child's ID
0004                  (../../source/defi):00398         P$SP           rmb       2                   stack pointer
0006                  (../../source/defi):00399         P$CHAP         rmb       1                   process chapter number
0007                  (../../source/defi):00400         P$ADDR         rmb       1                   user address beginning page number
0008                  (../../source/defi):00401         P$PagCnt       rmb       1                   memory page count
0009                  (../../source/defi):00402         P$User         rmb       2                   user index
000B                  (../../source/defi):00403         P$Prior        rmb       1                   priority
000C                  (../../source/defi):00404         P$Age          rmb       1                   age
000D                  (../../source/defi):00405         P$State        rmb       1                   status
000E                  (../../source/defi):00406         P$Queue        rmb       2                   queue link (process pointer)
0010                  (../../source/defi):00407         P$IOQP         rmb       1                   previous I/O queue link (process ID)
0011                  (../../source/defi):00408         P$IOQN         rmb       1                   next I/O queue link (process ID)
0012                  (../../source/defi):00409         P$PModul       rmb       2                   primary module
0014                  (../../source/defi):00410         P$SWI          rmb       2                   SWI entry point
0016                  (../../source/defi):00411         P$SWI2         rmb       2                   SWI2 entry point
0018                  (../../source/defi):00412         P$SWI3         rmb       2                   SWI3 entry point
001A                  (../../source/defi):00413         P$DIO          rmb       DefIOSiz            default I/O pointers
0026                  (../../source/defi):00414         P$PATH         rmb       NumPaths            I/O path table
0036                  (../../source/defi):00415         P$Signal       rmb       1                   signal code
0037                  (../../source/defi):00416         P$SigVec       rmb       2                   signal intercept vector
0039                  (../../source/defi):00417         P$SigDat       rmb       2                   signal intercept data address
003B                  (../../source/defi):00418         P$NIO          rmb       4
003F                  (../../source/defi):00419                        rmb       $40-.               unused
     0040             (../../source/defi):00420         P$Size         equ       .                   size of process descriptor
                      (../../source/defi):00421         
                      (../../source/defi):00422         *
                      (../../source/defi):00423         * Process state flags
                      (../../source/defi):00424         *
     0080             (../../source/defi):00425         SysState       equ       %10000000
     0040             (../../source/defi):00426         TimSleep       equ       %01000000
     0020             (../../source/defi):00427         TimOut         equ       %00100000
     0010             (../../source/defi):00428         ImgChg         equ       %00010000
     0002             (../../source/defi):00429         Condem         equ       %00000010
     0001             (../../source/defi):00430         Dead           equ       %00000001
                      (../../source/defi):00431         
                      (../../source/defi):00432                        ttl       I/O Definitions
                      (../../source/defi):00433                        pag
                      (../../source/defi):00434         *************************
                      (../../source/defi):00435         * Path descriptor offsets
                      (../../source/defi):00436         *
                      (../../source/defi):00437                        org       0
0000                  (../../source/defi):00438         PD.PD          rmb       1                   path number
0001                  (../../source/defi):00439         PD.MOD         rmb       1                   mode (read/write/update)
0002                  (../../source/defi):00440         PD.CNT         rmb       1                   number of open images
0003                  (../../source/defi):00441         PD.DEV         rmb       2                   device table entry address
0005                  (../../source/defi):00442         PD.CPR         rmb       1                   current process
0006                  (../../source/defi):00443         PD.RGS         rmb       2                   caller's register stack
0008                  (../../source/defi):00444         PD.BUF         rmb       2                   buffer address
000A                  (../../source/defi):00445         PD.FST         rmb       32-.                file manager's storage
     0020             (../../source/defi):00446         PD.OPT         equ       .                   path descriptor options
0020                  (../../source/defi):00447         PD.DTP         rmb       1                   device type
0021                  (../../source/defi):00448                        rmb       64-.                path options end
     0040             (../../source/defi):00449         PDSIZE         equ       .
                      (../../source/defi):00450         
                      (../../source/defi):00451         *
                      (../../source/defi):00452         * Pathlist special symbols
                      (../../source/defi):00453         *
     002F             (../../source/defi):00454         PDELIM         equ       '/                  pathlist name separator
     002E             (../../source/defi):00455         PDIR           equ       '.                  directory
     0040             (../../source/defi):00456         PENTIR         equ       '@                  entire device
                      (../../source/defi):00457         
                      (../../source/defi):00458                        pag
                      (../../source/defi):00459         ****************************
                      (../../source/defi):00460         * File manager entry offsets
                      (../../source/defi):00461         *
                      (../../source/defi):00462                        org       0
0000                  (../../source/defi):00463         FMCREA         rmb       3                   create (open new) file
0003                  (../../source/defi):00464         FMOPEN         rmb       3                   open file
0006                  (../../source/defi):00465         FMMDIR         rmb       3                   make directory
0009                  (../../source/defi):00466         FMCDIR         rmb       3                   change directory
000C                  (../../source/defi):00467         FMDLET         rmb       3                   delete file
000F                  (../../source/defi):00468         FMSEEK         rmb       3                   position file
0012                  (../../source/defi):00469         FMREAD         rmb       3                   read from file
0015                  (../../source/defi):00470         FMWRIT         rmb       3                   write to file
0018                  (../../source/defi):00471         FMRDLN         rmb       3                   read line
001B                  (../../source/defi):00472         FMWRLN         rmb       3                   write line
001E                  (../../source/defi):00473         FMGSTA         rmb       3                   get file status
0021                  (../../source/defi):00474         FMSSTA         rmb       3                   set file status
0024                  (../../source/defi):00475         FMCLOS         rmb       3                   close file
                      (../../source/defi):00476         
                      (../../source/defi):00477         *****************************
                      (../../source/defi):00478         * Device driver entry offsets
                      (../../source/defi):00479         *
                      (../../source/defi):00480                        org       0
0000                  (../../source/defi):00481         D$INIT         rmb       3                   device initialization
0003                  (../../source/defi):00482         D$READ         rmb       3                   read from device
0006                  (../../source/defi):00483         D$WRIT         rmb       3                   write to device
0009                  (../../source/defi):00484         D$GSTA         rmb       3                   get device status
000C                  (../../source/defi):00485         D$PSTA         rmb       3                   put device status
000F                  (../../source/defi):00486         D$TERM         rmb       3                   device termination
                      (../../source/defi):00487         
                      (../../source/defi):00488         *********************
                      (../../source/defi):00489         * Device table format
                      (../../source/defi):00490         *
                      (../../source/defi):00491                        org       0
0000                  (../../source/defi):00492         V$DRIV         rmb       2                   device driver module
0002                  (../../source/defi):00493         V$STAT         rmb       2                   device driver static storage
0004                  (../../source/defi):00494         V$DESC         rmb       2                   device descriptor module
0006                  (../../source/defi):00495         V$FMGR         rmb       2                   file manager module
0008                  (../../source/defi):00496         V$USRS         rmb       1                   use count
     0009             (../../source/defi):00497         DEVSIZ         equ       .
                      (../../source/defi):00498         
                      (../../source/defi):00499         *******************************
                      (../../source/defi):00500         * Device static storage offsets
                      (../../source/defi):00501         *
                      (../../source/defi):00502                        org       0
0000                  (../../source/defi):00503         V.PAGE         rmb       1                   port extended address
0001                  (../../source/defi):00504         V.PORT         rmb       2                   device 'base' port address
0003                  (../../source/defi):00505         V.LPRC         rmb       1                   last active process ID
0004                  (../../source/defi):00506         V.BUSY         rmb       1                   active process ID (0=not busy)
0005                  (../../source/defi):00507         V.WAKE         rmb       1                   active process descriptor if driver MUST wake-up
     0006             (../../source/defi):00508         V.USER         equ       .                   driver allocation origin
                      (../../source/defi):00509         
                      (../../source/defi):00510         ********************************
                      (../../source/defi):00511         * Interrupt polling table format
                      (../../source/defi):00512         *
                      (../../source/defi):00513                        org       0
0000                  (../../source/defi):00514         Q$Poll         rmb       2                   absolute polling address
0002                  (../../source/defi):00515         Q$Flip         rmb       1                   flip (EOR) byte; normally zero
0003                  (../../source/defi):00516         Q$Mask         rmb       1                   polling mask (after flip)
0004                  (../../source/defi):00517         Q$Serv         rmb       2                   absolute service routine Address
0006                  (../../source/defi):00518         Q$Stat         rmb       2                   static storage address
0008                  (../../source/defi):00519         Q$Prty         rmb       1                   priority (low numbers=top priority)
     0009             (../../source/defi):00520         POLSIZ         equ       .
                      (../../source/defi):00521         
                      (../../source/defi):00522         ********************
                      (../../source/defi):00523         * VIRQ packet format
                      (../../source/defi):00524         *
                      (../../source/defi):00525                        org       0
0000                  (../../source/defi):00526         Vi.Cnt         rmb       2                   count down counter
0002                  (../../source/defi):00527         Vi.Rst         rmb       2                   reset value for counter
0004                  (../../source/defi):00528         Vi.Stat        rmb       1                   status byte
     0005             (../../source/defi):00529         Vi.PkSz        equ       .
                      (../../source/defi):00530         
     0001             (../../source/defi):00531         Vi.IFlag       equ       %00000001           status byte virq flag
                      (../../source/defi):00532         
                      (../../source/defi):00533                        pag
                      (../../source/defi):00534         *************************************
                      (../../source/defi):00535         * Machine characteristics definitions
                      (../../source/defi):00536         *
     0000             (../../source/defi):00537         R$CC           equ       0                   condition codes register
     0001             (../../source/defi):00538         R$A            equ       1                   A accumulator
     0002             (../../source/defi):00539         R$B            equ       2                   B accumulator
     0001             (../../source/defi):00540         R$D            equ       R$A                 combined A:B accumulator
     0003             (../../source/defi):00541         R$DP           equ       3                   direct page register
     0004             (../../source/defi):00542         R$X            equ       4                   X index register
     0006             (../../source/defi):00543         R$Y            equ       6                   Y index register
     0008             (../../source/defi):00544         R$U            equ       8                   user stack register
     000A             (../../source/defi):00545         R$PC           equ       10                  program counter register
     000C             (../../source/defi):00546         R$Size         equ       12                  total register package size
                      (../../source/defi):00547         
     0080             (../../source/defi):00548         Entire         equ       %10000000           full register stack flag
     0040             (../../source/defi):00549         FIRQMask       equ       %01000000           fast interrupt mask bit
     0020             (../../source/defi):00550         HalfCrry       equ       %00100000           half carry flag
     0010             (../../source/defi):00551         IRQMask        equ       %00010000           interrupt mask bit
     0008             (../../source/defi):00552         Negative       equ       %00001000           negative flag
     0004             (../../source/defi):00553         Zero           equ       %00000100           zero flag
     0002             (../../source/defi):00554         TwosOvfl       equ       %00000010           two's complement overflow flag
     0001             (../../source/defi):00555         Carry          equ       %00000001           carry bit
     0050             (../../source/defi):00556         IntMasks       equ       IRQMask+FIRQMask
     0080             (../../source/defi):00557         Sign           equ       %10000000           sign bit
                      (../../source/defi):00558         
                      (../../source/defi):00559                        ttl       Error code definitions
                      (../../source/defi):00560                        pag
                      (../../source/defi):00561         ************************
                      (../../source/defi):00562         * Error code definitions
                      (../../source/defi):00563         *
                      (../../source/defi):00564                        org       200
00C8                  (../../source/defi):00565         E$PthFul       rmb       1                   path table full
00C9                  (../../source/defi):00566         E$BPNum        rmb       1                   bad path number
00CA                  (../../source/defi):00567         E$Poll         rmb       1                   polling table Full
00CB                  (../../source/defi):00568         E$BMode        rmb       1                   bad Mode
00CC                  (../../source/defi):00569         E$DevOvf       rmb       1                   device table overflow
00CD                  (../../source/defi):00570         E$BMID         rmb       1                   bad module ID
00CE                  (../../source/defi):00571         E$DirFul       rmb       1                   module directory full
00CF                  (../../source/defi):00572         E$MemFul       rmb       1                   process memory full
00D0                  (../../source/defi):00573         E$UnkSvc       rmb       1                   unknown service code
00D1                  (../../source/defi):00574         E$ModBsy       rmb       1                   module busy
00D2                  (../../source/defi):00575         E$BPAddr       rmb       1                   bad page address
00D3                  (../../source/defi):00576         E$EOF          rmb       1                   end of file
00D4                  (../../source/defi):00577                        rmb       1
00D5                  (../../source/defi):00578         E$NES          rmb       1                   non-existent segment
00D6                  (../../source/defi):00579         E$FNA          rmb       1                   file not accesible
00D7                  (../../source/defi):00580         E$BPNam        rmb       1                   bad path name
00D8                  (../../source/defi):00581         E$PNNF         rmb       1                   path name Not Found
00D9                  (../../source/defi):00582         E$SLF          rmb       1                   segment list full
00DA                  (../../source/defi):00583         E$CEF          rmb       1                   creating existing file
00DB                  (../../source/defi):00584         E$IBA          rmb       1                   illegal block address
00DC                  (../../source/defi):00585                        rmb       1
00DD                  (../../source/defi):00586         E$MNF          rmb       1                   module not found
00DE                  (../../source/defi):00587                        rmb       1
00DF                  (../../source/defi):00588         E$DelSP        rmb       1                   deleting stack pointer memory
00E0                  (../../source/defi):00589         E$IPrcID       rmb       1                   illegal process ID
     00E0             (../../source/defi):00590         E$BPrcID       equ       E$IPrcID            bad process ID
00E1                  (../../source/defi):00591                        rmb       1
00E2                  (../../source/defi):00592         E$NoChld       rmb       1                   no children
00E3                  (../../source/defi):00593         E$ISWI         rmb       1                   illegal SWI code
00E4                  (../../source/defi):00594         E$PrcAbt       rmb       1                   process aborted
00E5                  (../../source/defi):00595         E$PrcFul       rmb       1                   process table full
00E6                  (../../source/defi):00596         E$IForkP       rmb       1                   illegal fork parameter
00E7                  (../../source/defi):00597         E$KwnMod       rmb       1                   known module
00E8                  (../../source/defi):00598         E$BMCRC        rmb       1                   bad module CRC
00E9                  (../../source/defi):00599         E$USigP        rmb       1                   unprocessed signal pending
00EA                  (../../source/defi):00600         E$NEMod        rmb       1                   non-existent module
00EB                  (../../source/defi):00601         E$BNam         rmb       1                   bad name
00EC                  (../../source/defi):00602         E$BMHP         rmb       1                   bad module header parity
00ED                  (../../source/defi):00603         E$NoRAM        rmb       1                   no system RAM available
00EE                  (../../source/defi):00604         E$DNE          rmb       1                   directory not empty
00EF                  (../../source/defi):00605         E$NoTask       rmb       1                   no available task number
                      (../../source/defi):00606                        rmb       $F0-.               reserved
00F0                  (../../source/defi):00607         E$Unit         rmb       1                   illegal media unit
00F1                  (../../source/defi):00608         E$Sect         rmb       1                   bad sector number
00F2                  (../../source/defi):00609         E$WP           rmb       1                   write protect
00F3                  (../../source/defi):00610         E$CRC          rmb       1                   bad checksum
00F4                  (../../source/defi):00611         E$Read         rmb       1                   read error
00F5                  (../../source/defi):00612         E$Write        rmb       1                   write error
00F6                  (../../source/defi):00613         E$NotRdy       rmb       1                   device not ready
00F7                  (../../source/defi):00614         E$Seek         rmb       1                   seek error
00F8                  (../../source/defi):00615         E$Full         rmb       1                   media full
00F9                  (../../source/defi):00616         E$BTyp         rmb       1                   bad type (incompatible) media
00FA                  (../../source/defi):00617         E$DevBsy       rmb       1                   device busy
00FB                  (../../source/defi):00618         E$DIDC         rmb       1                   media ID change
00FC                  (../../source/defi):00619         E$Lock         rmb       1                   record is busy (locked out)
00FD                  (../../source/defi):00620         E$Share        rmb       1                   non-sharable file busy
00FE                  (../../source/defi):00621         E$DeadLk       rmb       1                   I/O deadlock error
                      (../../source/defi):00622         
                      (../../source/defi):00623         * Character definitions
     0020             (../../source/defi):00624         C$Space        set       $20
     002E             (../../source/defi):00625         C$Period       set       '.
     002C             (../../source/defi):00626         C$Comma        set       ',
                      (../../source/defi):00627         
                      (../../source/defi):00628                        endc
                      (    rldec_opt.asm):00019         
     0011             (    rldec_opt.asm):00020         tylg           set       Prgrm+Objct
     0081             (    rldec_opt.asm):00021         atrv           set       ReEnt+rev
     0001             (    rldec_opt.asm):00022         rev            set       $01
     0001             (    rldec_opt.asm):00023         edition        set       1
                      (    rldec_opt.asm):00024         
0000 87CD005A000D1181 (    rldec_opt.asm):00025                        mod       eom,name,tylg,atrv,start,size
     7200130128
                      (    rldec_opt.asm):00026         
     0020             (    rldec_opt.asm):00027         sourcesize     equ       32
                      (    rldec_opt.asm):00028         
                      (    rldec_opt.asm):00029                        org       0
0000.                 (    rldec_opt.asm):00030         source         rmb       sourcesize
0020.                 (    rldec_opt.asm):00031         dest           rmb       sourcesize*2
0060.                 (    rldec_opt.asm):00032         stack          rmb       200
     0128             (    rldec_opt.asm):00033         size           equ       .
                      (    rldec_opt.asm):00034         
000D 726C6465E3       (    rldec_opt.asm):00035         name           fcs       /rldec/
0012 01               (    rldec_opt.asm):00036                        fcb       edition
                      (    rldec_opt.asm):00037         
                      (    rldec_opt.asm):00038         *
                      (    rldec_opt.asm):00039         * RLE decoder.
                      (    rldec_opt.asm):00040         *
                      (    rldec_opt.asm):00041         * Example 1:
                      (    rldec_opt.asm):00042         * 12 bytes of input: [1]A[1]B[1]A[3]C[1]A[1]B
                      (    rldec_opt.asm):00043         *  8 bytes of output:  ABACCCABA
                      (    rldec_opt.asm):00044         *
                      (    rldec_opt.asm):00045         * Example 2:
                      (    rldec_opt.asm):00046         * 12 bytes of input: [5]D[1]A[1]C[1]D[5]B[3]D
                      (    rldec_opt.asm):00047         * 16 bytes of output:  DDDDDACDBBBBBDDD
                      (    rldec_opt.asm):00048         *
                      (    rldec_opt.asm):00049                 
0013.                 (    rldec_opt.asm):00050         start:
0013 308D000B         (    rldec_opt.asm):00051                 leax    sighandler,pcr          point to the signal handler
0017 103F09           (    rldec_opt.asm):00052                 os9             F$Icpt                  install it
                      (    rldec_opt.asm):00053                 
001A.                 (    rldec_opt.asm):00054         forever 
001A 8E0000           (    rldec_opt.asm):00055                 ldx       #0                            timed sleep 0 means sleep forever
001D 103F0A           (    rldec_opt.asm):00056                 os9             F$Sleep                 perform sleep waiting on a signal
0020 20F8             (    rldec_opt.asm):00057                 bra       forever                       once we wake up, go back to sleep
                      (    rldec_opt.asm):00058                 
0022.                 (    rldec_opt.asm):00059         sighandler
0022 30C4             (    rldec_opt.asm):00060                 leax      source,u                      point X to the source buffer
0024 31C820           (    rldec_opt.asm):00061                 leay      dest,u              point Y to the destination buffer
0027 CC0020           (    rldec_opt.asm):00062                 ldd       #sourcesize         load D with the source size
                      (    rldec_opt.asm):00063         *       bsr             rldec                   branch to the subroutine
002A 3B               (    rldec_opt.asm):00064                 rti                                             return from the signal handler
                      (    rldec_opt.asm):00065                 
                      (    rldec_opt.asm):00066         * Run-length decoder in hand-optimized Turbo9 assembler
                      (    rldec_opt.asm):00067         *
                      (    rldec_opt.asm):00068         * Entry:
                      (    rldec_opt.asm):00069         *    X = source buffer
                      (    rldec_opt.asm):00070         *    Y = destination buffer
                      (    rldec_opt.asm):00071         *    D = destination buffer size
                      (    rldec_opt.asm):00072         *
                      (    rldec_opt.asm):00073         * Exit:
                      (    rldec_opt.asm):00074         *    D = destination size
002B.                 (    rldec_opt.asm):00075         rldec:
002B 3406             (    rldec_opt.asm):00076                 pshs      d                     save destination buffer size on stack
002D 4F               (    rldec_opt.asm):00077                 clra
002E 5F               (    rldec_opt.asm):00078                 clrb                            D = 0
002F 3406             (    rldec_opt.asm):00079                 pshs      d                     save decode size (starts at 0) on stack
                      (    rldec_opt.asm):00080         
                      (    rldec_opt.asm):00081         * 0,s = decode size (starts at 0, then increments)
                      (    rldec_opt.asm):00082         * 2,s = destination size
0031.                 (    rldec_opt.asm):00083         loop_top
                      (    rldec_opt.asm):00084         * is count 0?
0031 E684             (    rldec_opt.asm):00085                 ldb       ,x        get count (0 - 255) in B
0033 2716             (    rldec_opt.asm):00086                 beq       done      if 0, we're done
0035 4F               (    rldec_opt.asm):00087                 clra                clear A (D = 0 - 255)
0036 E3E4             (    rldec_opt.asm):00088                 addd      ,s        add D to decode size on stack
0038 10A362           (    rldec_opt.asm):00089                 cmpd      2,s       compare to destination size
003B 2E14             (    rldec_opt.asm):00090                 bgt       err       too large... stop decoding
003D EC81             (    rldec_opt.asm):00091             ldd       ,x++              get the count in A and byte in B
003F 3402             (    rldec_opt.asm):00092                 pshs      a         save count on the stack
0041.                 (    rldec_opt.asm):00093         copy_loop
0041 E7A0             (    rldec_opt.asm):00094                 stb       ,y+           store byte in Y and increment
0043 6AE4             (    rldec_opt.asm):00095                 dec       ,s            decrement the counter on the stack
0045 26FA             (    rldec_opt.asm):00096                 bne       copy_loop     continue if not 0
0047 327F             (    rldec_opt.asm):00097                 leas      -1,s      recover old count on stack
0049 20E6             (    rldec_opt.asm):00098                 bra       loop_top  and go to top of loop for next pair
004B.                 (    rldec_opt.asm):00099         done    
004B 3264             (    rldec_opt.asm):00100                 leas      4,s           destroy earlier pushed vars
004D CC0000           (    rldec_opt.asm):00101                 ldd       #0            load return with 0 (success)            
0050 39               (    rldec_opt.asm):00102                 rts
0051 3264             (    rldec_opt.asm):00103         err leas      4,s               destroy earlier pushed vars
0053 CCFFFF           (    rldec_opt.asm):00104             ldd       #-1               load return with -1 (error)
0056 39               (    rldec_opt.asm):00105                 rts
                      (    rldec_opt.asm):00106             
0057 C48C2A           (    rldec_opt.asm):00107                 emod
     005A             (    rldec_opt.asm):00108         eom  equ       *
                      (    rldec_opt.asm):00109              end            
